import{aW as n,bJ as u,aC as i}from"./index.e70dc7e8.js";import{u as l}from"./useNotify.e83fbf31.js";const{supabase:s}=i(),{notifyError:g,notifySuccess:c}=l(),o="turmas",y=n("turmas",{state:()=>({turmas:[]}),getters:{turmasCountByEscolaId:r=>a=>r.turmas.filter(e=>e.escola_id===a).length},actions:{async getAllTurmas(r){try{const{data:a,error:e}=await s.from(o).select("*, curso:curso_id(*), escola:escola_id(*)").eq("escola_id",r);if(e)throw e.message;return this.turmas=a}catch(a){console.log(a)}},async addTurma(r){try{const{data:a,error:e}=await s.from(o).insert([{nome_turma:r.nome_turma,num_sala:r.num_sala,ano:r.ano,curso_id:r.curso_id,escola_id:r.escola_id}]);if(e)throw e.message;return c("Turma cadastrada com sucesso"),this.turmas=a}catch{}},async getTurmaById(r){try{const{data:a,error:e}=await s.from(o).select("*").eq("id",r).single();if(e)throw e.message;return a}catch(a){console.log(a)}},async updateTurmaById(r,a){try{const{data:e,error:t}=await s.from(o).update({nome_turma:a.nome_turma,num_sala:a.num_sala,ano:a.ano,curso_id:a.curso_id,escola_id:a.escola_id}).eq("id",r);if(t)throw t.message;return c("Turma actualizada com sucesso"),e}catch(e){console.log(e)}},async deleteTurmaById(r){try{u.create({title:"Confirme",message:"Voc\xEA tens a certeza que pretendes apagar esta Turma?",cancel:!0,persistent:!0}).onOk(async()=>{const{data:a,error:e}=await s.from(o).delete().match({id:r});if(e)throw e;return c("Turma apagada com sucesso"),a}).onCancel(()=>{console.log("Deletion canceled")})}catch(a){console.log(a)}},async getEscolaIdByEmail(r){try{const{data:a,error:e}=await s.from("escolas").select("id").eq("email",r);if(e)throw e.message;return a[0].id}catch(a){console.log(a)}}}});export{y as u};
