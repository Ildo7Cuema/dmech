import{aW as n,bJ as u,aC as i}from"./index.bc90a1a6.js";import{u as l}from"./useNotify.98763d5b.js";const{supabase:r}=i(),{notifyError:m,notifySuccess:t}=l(),c="cursos",y=n("cursos",{state:()=>({cursos:[]}),getters:{cursoCountByEscolaId:s=>o=>(console.log(o),s.cursos.filter(e=>e.escola_id===o).length)},actions:{async getAllCursos(s){console.log(s);try{const{data:o,error:e}=await r.from(c).select("*").eq("escola_id",s);if(e)throw e.message;return this.cursos=o}catch(o){console.log(o)}},async addCurso(s){console.log(s);try{const{data:o,error:e}=await r.from(c).insert([{nome_curso:s.nome_curso,descricao:s.descricao,duracao:s.duracao,escola_id:s.escola_id}]);if(e)throw e.message;return t("Curso cadastrado com sucesso"),this.cursos=o}catch{}},async getCursoById(s){try{const{data:o,error:e}=await r.from(c).select("*").eq("id",s).single();if(e)throw e.message;return o}catch(o){console.log(o)}},async updateCursoById(s,o){try{const{data:e,error:a}=await r.from(c).update({nome_curso:o.nome_curso,descricao:o.descricao,duracao:o.duracao,escola_id:o.escola_id}).eq("id",s);if(a)throw a.message;return t("Curso actualizado com sucesso"),e}catch(e){console.log(e)}},async deleteCursoById(s){try{u.create({title:"Confirme",message:"Voc\xEA tens a certeza que pretendes apagar este curso?",cancel:!0,persistent:!0}).onOk(async()=>{const{data:o,error:e}=await r.from(c).delete().match({id:s});if(e)throw e;return t("Curso apagado com sucesso"),o}).onCancel(()=>{console.log("Deletion canceled")})}catch(o){console.log(o)}},async getEscolaIdByEmail(s){try{const{data:o,error:e}=await r.from("escolas").select("id").eq("email",s);if(e)throw e.message;return o[0].id}catch(o){console.log(o)}}}});export{y as u};
